{"version":3,"file":"index.min.js","sources":["src/compressImage.js","src/index.js"],"sourcesContent":["function compressImage (imageConfig) {\n  return new Promise(resolve => {\n    const {\n      width,\n      height,\n      quality,\n      src,\n    } = imageConfig;\n    const image = new Image();\n    image.onload = () => {\n      resolve({\n        image,\n        width,\n        height,\n        mimeType: base64MimeType(src),\n        quality,\n      });\n    };\n    if (window.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(window.navigator.userAgent)) {\n      // Fix the `The operation is insecure` error (#57)\n      image.crossOrigin = 'anonymous';\n    }\n    image.src = src;\n  }).then(drawCanvas);\n}\n\nfunction drawCanvas(config) {\n  return new Promise(resolve => {\n    const { image, width, height, mimeType, quality } = config;\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    const context = canvas.getContext('2d');\n    context.fillStyle = 'transparent';\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.drawImage(image, 0, 0, width, height);\n    context.restore();\n    if (canvas.toBlob) {\n      canvas.toBlob(blob => {\n        const reader = new FileReader();\n        reader.readAsDataURL(blob);\n        reader.onloadend = function() {\n          resolve(reader.result);\n        }\n      }, mimeType, quality);\n    }\n  });\n}\n\nfunction base64MimeType(encoded) {\n  let result = null;\n  if (typeof encoded !== 'string') {\n    return result;\n  }\n  let mime = encoded.match(/data:([a-zA-Z0-9]+\\/[a-zA-Z0-9-.+]+).*,.*/);\n  if (mime && mime.length) {\n    result = mime[1];\n  }\n  return result;\n}\n\nexport default compressImage;\n","/**\n * 参考lottie-compress，压缩包括\n *  数字精度压缩\n *  css属性名压缩\n *  移除默认属性\n *  图片压缩\n *\n */\nimport karas from 'karas';\nimport 'regenerator-runtime';\nimport cloneDeep from 'lodash.clonedeep';\nimport isEqual from 'lodash.isEqual';\nimport get from 'lodash.get';\n\nimport * as innerCompressImage from './compressImage';\n\nconst { XOM } = karas.reset;\nconst { isNil } = karas.util;\nconst { fullCssProperty, fullAnimate, fullAnimateOption } = karas.abbr;\n\nfunction equalArr(a, b) {\n  if(a.length !== b.length) {\n    return false;\n  }\n  for(let i = 0, len = a.length; i < len; i++) {\n    let ai = a[i];\n    let bi = b[i];\n    let isArrayA = Array.isArray(ai);\n    let isArrayB = Array.isArray(bi);\n    if(isArrayA && isArrayB) {\n      if(!equalArr(ai, bi)) {\n        return false;\n      }\n    }\n    else if(isArrayA || isArrayB) {\n      return false;\n    }\n    if(ai !== bi) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction equalAnimateValue(a, b) {\n  let keyList = [];\n  let keyHash = {};\n  Object.keys(a).forEach(k => {\n    if(k !== 'offset' && !keyHash.hasOwnProperty(k)) {\n      keyList.push(k);\n      keyHash[k] = true;\n    }\n  });\n  for(let i = 0, len = keyList.length; i < len; i++) {\n    let k = keyList[i];\n    if(b.hasOwnProperty(k)) {\n      let va = a[k];\n      let vb = b[k];\n      if(Array.isArray(va) && Array.isArray(vb)) {\n        if(!equalArr(a, b)) {\n          return false;\n        }\n      }\n      else if(Array.isArray(va) || Array.isArray(vb)) {\n        // 异常情况\n        return false;\n      }\n      else if(va !== vb) {\n        return false;\n      }\n    }\n    else {\n      return false;\n    }\n  }\n  let res = true;\n  Object.keys(b).forEach(k => {\n    if(k !== 'offset' && !keyHash.hasOwnProperty(k)) {\n      res = false;\n    }\n  });\n  return res;\n}\n\nfunction isAnimateValueUnavailable(value) {\n  return !value || value.length === 0 || value.length === 1 && Object.keys(value[0]).length === 0;\n}\n\nconst numberPrecisionMapper = {\n  offset: 2,\n  duration: 0,\n  delay: 0,\n  endDelay: 0,\n};\n\n// 默认不压缩图片，处理缩写和重复属性\nconst defaultCompressOption = {\n  image: false,\n  abbr: true,\n  duplicate: true,\n  positionPrecision: 2\n};\n\nclass KarasCompress {\n  constructor(json, options) {\n    let animationJson;\n    if(typeof json === 'string') {\n      try {\n        animationJson = JSON.parse(json);\n      } catch(error) {\n        console.error(error);\n      }\n    }\n    else if(typeof json === 'object') {\n      animationJson = json;\n    }\n    this.animationJson = animationJson;\n    if(!(this.animationJson && typeof this.animationJson === 'object')) {\n      throw new Error('init compress error');\n    }\n    this.options = {\n      quality: options && options.quality || 0.8,\n      compressImage: options && options.compressImage,\n      useCanvasCompress: options && options.useCanvasCompress,\n      ...options,\n    };\n    // init library\n    this.initLibrary();\n  }\n\n  async compress(option = defaultCompressOption) {\n    if(!this.animationJson || typeof this.animationJson !== 'object' || !option) {\n      return this.animationJson;\n    }\n    const {\n      image: needCompressImage,\n      abbr: needAbbr,\n      duplicate: needDuplicate,\n      positionPrecision = 2,\n    } = option;\n    const animationJson = cloneDeep(this.animationJson);\n    this.setPositionPrecision(positionPrecision);\n    let imagesPromise = [];\n    if (needCompressImage) {\n      this.traverseImage(animationJson.library, imagesPromise);\n      this.traverseImage(animationJson.children, imagesPromise);\n      await Promise.all(imagesPromise);\n    }\n    this.traverseJson(animationJson, needAbbr, needDuplicate);\n    this.traverseJson(animationJson.library, needAbbr, needDuplicate);\n    return animationJson;\n  }\n\n  initLibrary() {\n    const library = this.animationJson.library;\n    this.libraryIdMapper = {};\n    this.libraryMapper = {};\n    if (!library || library.length === 0) return;\n    let compressedLibraryId = 0;\n    library.forEach(item => {\n      this.libraryIdMapper[item.id] = compressedLibraryId++;\n      this.libraryMapper[item.id] = item;\n    });\n  }\n\n  setPositionPrecision(value = 0) {\n    ['width', 'height', 'left', 'top'].forEach(key => {\n      numberPrecisionMapper[key] = value;\n    });\n  }\n  traverseImage(children, promiseList) {\n    if(!children || children.length === 0) {\n      return;\n    }\n    children.forEach(item => {\n      // 是否引用library\n      const isRefLibrary = !!(item.libraryId && item.init);\n      let isImage = false;\n      let width;\n      let height;\n      let src;\n      if (isRefLibrary) {\n        const library = this.libraryMapper[item.libraryId];\n        width = get(item, 'init.style.width') || get(library, 'props.style.width');\n        height = get(item, 'init.style.height') || get(library, 'props.style.height');\n        src = get(item, 'init.src');\n        isImage = library && library.tagName === 'img' && !!src;\n      } else {\n        width = get(item, 'props.style.width');\n        height = get(item, 'props.style.height');\n        src = get(item, 'props.src');\n        isImage = item.tagName === 'img' && !!src;\n      }\n      if(isImage) {\n        const props = isRefLibrary ? item.init : item.props;\n        if (!props) return;\n        const quality = this.options.quality;\n        const compressImage = this.options.useCanvasCompress\n          ? innerCompressImage\n          : this.options.compressImage;\n        async function asyncCompressImage() {\n          let compressedSrc = src;\n          if (compressImage) {\n            compressedSrc = await compressImage({\n              width,\n              height,\n              src,\n              quality,\n            });\n          }\n          props.src = compressedSrc;\n        }\n        promiseList.push(asyncCompressImage());\n      }\n      else if(item.children && item.children.length > 0) {\n        this.traverseImage(item.children, promiseList);\n      }\n    });\n  }\n\n  traverseJson(json, needAbbr, needDuplicate) {\n    if(!json) {\n      return;\n    }\n    if (Array.isArray(json)) {\n      json.forEach(item => {\n        this.traverseJson(item, needAbbr, needDuplicate);\n      });\n      return;\n    }\n    let { id, libraryId, init, props, animate, children } = json;\n    const isRefLibrary = !!libraryId;\n    if(animate) {\n      animate.forEach((animateItem, index) => {\n        let { value, options } = animateItem;\n        Object.keys(options).forEach(item => {\n          if(needAbbr) {\n            let shortOptionName = this.compressAnimationOptionName(item);\n            let fixedOptionValue = this.cutNumber(options[item], numberPrecisionMapper[item]);\n            delete options[item];\n            options[shortOptionName] = fixedOptionValue;\n          }\n        });\n        Object.keys(animateItem).forEach(item => {\n          if(needAbbr) {\n            let shortName = this.compressAnimateName(item);\n            if(shortName !== item) {\n              animateItem[shortName] = animateItem[item];\n              delete animateItem[item];\n            }\n          }\n        });\n        if(needDuplicate) {\n          let len = value.length;\n          // 去除重复帧，寻找和当前帧样式相同的帧，当跨度>=3时，删除中间的，当跨度2且总长2时保留1个\n          if(len > 2) {\n            for(let i = 0; i < value.length - 2; i++) {\n              let start = value[i];\n              if(equalAnimateValue(start, value[i + 1])) {\n                if(equalAnimateValue(start, value[i + 2])) {\n                  // 直接和最后相等\n                  if(i + 3 === len) {\n                    value.splice(i + 1, 1);\n                    break;\n                  }\n                  else {\n                    let lastEqualIndex = i + 2;\n                    let j = lastEqualIndex + 1;\n                    // 找到不相等的那个索引\n                    for(; j < len; j++) {\n                      if(!equalAnimateValue(start, value[j])) {\n                        break;\n                      }\n                      lastEqualIndex = j;\n                    }\n                    value.splice(i + 1, lastEqualIndex - i - 1);\n                  }\n                  i += 2;\n                }\n                else {\n                  i++;\n                }\n              }\n            }\n          }\n          len = value.length;\n          // 只有2个时重复可去除一个，多个时上面操作可能会变成只有2个情况\n          if(len === 2) {\n            if(equalAnimateValue(value[0], value[1])) {\n              value.splice(1);\n            }\n          }\n          len = value.length;\n          // 去除首尾offset\n          if(len) {\n            delete value[0].offset;\n            delete value[len - 1].offset;\n          }\n        }\n        value && value.forEach(item => {\n          if (needDuplicate) {\n            this.removeDuplicatePropertyInFrame(item, isRefLibrary ? init.style : props.style, libraryId);\n          }\n          if(needAbbr) {\n            this.compressBezier(item);\n          }\n          // 前面已经通过removeDuplicatePropertyInFrame移除了重复的属性，这里不需要处理\n          this.compressCssObject(item, false, needAbbr);\n        });\n        // 经过处理之后animateItem的value是否只有一个空对象，如果是，则移除整个animateItem\n        if (isAnimateValueUnavailable(value)) {\n          animate[index] = null;\n        }\n        // 判断当前animate是否与上一个相同，如果相同，则移除\n        if (isEqual(animate[index], animate[index - 1])) {\n          animate[index] = null;\n        }\n      });\n      const filterAnimate = animate.filter(item => !!item);\n      if (filterAnimate.length === 0) {\n        delete json.animate;\n      } else {\n        json.animate = filterAnimate;\n      }\n    }\n    // id是library内才有的\n    if (!isNil(id)) {\n      json.id = this.libraryIdMapper[id];\n    }\n    // 引用library的item，只有init没有props\n    if (init) {\n      this.compressCssObject(init.style, needDuplicate, needAbbr, libraryId);\n      this.removeDuplicatePropertyInLibrary(init, libraryId, 'points');\n      this.removeDuplicatePropertyInLibrary(init, libraryId, 'controls');\n      if(needAbbr) {\n        if (init.points) init.points = this.cutNumber(init.points);\n        if (init.controls) init.controls = this.cutNumber(init.controls);\n      }\n    }\n    // 引用library，压缩引用ID\n    if (libraryId) {\n      json.libraryId = this.compressLibraryId(libraryId);\n    }\n    if(props) {\n      // 压缩props\n      this.compressCssObject(props.style, needDuplicate, needAbbr);\n      if(needAbbr) {\n        if (props.points) props.points = this.cutNumber(props.points);\n        if (props.controls) props.controls = this.cutNumber(props.controls);\n      }\n    }\n    if(children && Array.isArray(children)) {\n      children.forEach(item => {\n        this.traverseJson(item, needAbbr, needDuplicate);\n      });\n    }\n  }\n\n  compressCssObject(cssObj, canDeleteDefaultProperty = false, canAbbr = false, libraryId) {\n    if(!cssObj) {\n      return;\n    }\n    Object.keys(cssObj).forEach(propertyName => {\n      if (isNil(cssObj[propertyName])) {\n        // 删除空值\n        delete cssObj[propertyName];\n      } else if(canDeleteDefaultProperty) {\n        // 检查默认值\n        // 如果是引用library，则需要判断是否默认值出现在library中\n        // 1.出现在library中且值不为默认值，不能删除\n        // 2.出现在library中且值为默认值，可以删除\n        const libraryItem = this.libraryMapper[libraryId];\n        const libraryStyleCssProperties = libraryItem && libraryItem.props && libraryItem.props.style && libraryItem.props.style[propertyName];\n        const matchDefault = this.checkDefaultProperty(propertyName, cssObj[propertyName]);\n        const libraryMatchDefault = this.checkDefaultProperty(propertyName, libraryStyleCssProperties);\n        const matchLibrary = isEqual(cssObj[propertyName], libraryStyleCssProperties);\n        if (matchLibrary) {\n          delete cssObj[propertyName];\n        } else if (matchDefault && (!libraryId || libraryMatchDefault)) {\n          delete cssObj[propertyName];\n        }\n      }\n      if (canAbbr && !isNil(cssObj[propertyName])) {\n        let shortPropertyName = this.compressCssPropertyName(propertyName);\n        let fixedPropertyValue = this.cutNumber(cssObj[propertyName], numberPrecisionMapper[propertyName]);\n        delete cssObj[propertyName];\n        cssObj[shortPropertyName] = fixedPropertyValue;\n      }\n    });\n  }\n\n  // 移除每帧中属性\n  // 1. 与style重复，则删除\n  // 2. style没有，判断是否为默认属性值，如果是则删除\n  removeDuplicatePropertyInFrame(frame, style, libraryId) {\n    if (!frame) return;\n    const libraryStyle = get(this.libraryMapper, `${libraryId}.props.style`);\n\n    Object.keys(frame).forEach(propertyName => {\n      if (style && !isNil(style[propertyName])) {\n        // style重复\n        if (isEqual(frame[propertyName], style[propertyName])) {\n          delete frame[propertyName];\n        }\n      } else if (libraryStyle && !isNil(libraryStyle[propertyName])) {\n        // 与library重复\n        if (isEqual(frame[propertyName], libraryStyle[propertyName])) {\n          delete libraryStyle[propertyName];\n        }\n      } else {\n        // 判断是否为默认属性值\n        if (this.checkDefaultProperty(propertyName, frame[propertyName])) {\n          delete frame[propertyName];\n        }\n      }\n    });\n  }\n\n  // 移除props与library中相同的属性\n  removeDuplicatePropertyInLibrary(props, libraryId, key) {\n    const libraryProps = get(this.libraryMapper, `${libraryId}.props`);\n    if (!key || !props[key] || !libraryProps[key]) return;\n    if (isEqual(props[key], libraryProps[key])) {\n      delete props[key];\n    }\n  }\n\n  checkDefaultProperty(k, v) {\n    return XOM[k] === v;\n  }\n\n  compressCssPropertyName(propertyName) {\n    const matches = propertyName.match(/^var-(.*)/);\n    if (matches && matches[1]) {\n      return `var-${fullCssProperty[matches[1]] || matches[1]}`;\n    }\n    return fullCssProperty[propertyName] || propertyName;\n  }\n\n  compressAnimateName(itemName) {\n    return fullAnimate[itemName] || itemName;\n  }\n\n  compressAnimationOptionName(optionName) {\n    const matches = optionName.match(/^var-(.*)/);\n    if (matches && matches[1]) {\n      return `var-${fullAnimateOption[matches[1]] || matches[1]}`;\n    }\n    return fullAnimateOption[optionName] || optionName;\n  }\n\n  cutNumber(propertyValue, n) {\n    if(Array.isArray(propertyValue) && propertyValue.length > 0) {\n      // 数组继续递归\n      return propertyValue.map(v => this.cutNumber(v, n));\n    }\n    else if(typeof propertyValue !== 'number') {\n      // 如果不是数字则立即返回原值\n      return propertyValue;\n    }\n    return Number(propertyValue.toFixed(n >= 0 ? n : 4)) || 0;\n  }\n\n  compressBezier(item) {\n    if (!item || !item.easing) return;\n    const matches = item.easing.match(/\\((.*)\\)/);\n    if (matches && matches[1]) {\n      const controls = matches[1].split(',');\n      const fixedControls = controls.map(item => this.cutNumber(item, 3));\n      item.easing = `(${fixedControls.join(',')})`;\n    }\n  }\n\n  compressLibraryId(libraryId) {\n    return this.libraryIdMapper[libraryId] >= 0 ? this.libraryIdMapper[libraryId] : libraryId;\n  }\n}\n\nexport default KarasCompress;\n\n\n\n\n\n"],"names":["compressImage","imageConfig","Promise","resolve","width","height","quality","src","image","Image","onload","mimeType","base64MimeType","window","navigator","test","userAgent","crossOrigin","then","drawCanvas","config","canvas","document","createElement","context","getContext","fillStyle","fillRect","save","drawImage","restore","toBlob","blob","reader","FileReader","readAsDataURL","onloadend","result","encoded","mime","match","length","XOM","karas","reset","isNil","util","abbr","fullCssProperty","fullAnimate","fullAnimateOption","equalArr","a","b","i","len","ai","bi","isArrayA","Array","isArray","isArrayB","equalAnimateValue","keyList","keyHash","Object","keys","forEach","k","hasOwnProperty","push","va","vb","res","isAnimateValueUnavailable","value","numberPrecisionMapper","offset","duration","delay","endDelay","defaultCompressOption","duplicate","positionPrecision","KarasCompress","json","options","animationJson","JSON","parse","error","console","_typeof","this","Error","useCanvasCompress","initLibrary","option","needCompressImage","needAbbr","needDuplicate","cloneDeep","setPositionPrecision","imagesPromise","traverseImage","library","children","all","traverseJson","libraryIdMapper","libraryMapper","compressedLibraryId","item","_this","id","key","promiseList","isRefLibrary","libraryId","init","isImage","_this2","get","tagName","asyncCompressImage","compressedSrc","props","innerCompressImage","_this3","animate","animateItem","index","shortOptionName","compressAnimationOptionName","fixedOptionValue","cutNumber","shortName","compressAnimateName","start","splice","lastEqualIndex","j","removeDuplicatePropertyInFrame","style","compressBezier","compressCssObject","isEqual","filterAnimate","filter","removeDuplicatePropertyInLibrary","points","controls","compressLibraryId","cssObj","canDeleteDefaultProperty","canAbbr","propertyName","libraryItem","_this4","libraryStyleCssProperties","matchDefault","checkDefaultProperty","libraryMatchDefault","shortPropertyName","compressCssPropertyName","fixedPropertyValue","frame","libraryStyle","_this5","libraryProps","v","matches","itemName","optionName","propertyValue","n","map","_this6","Number","toFixed","easing","fixedControls","split","_this7","join"],"mappings":"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"}